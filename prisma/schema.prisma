datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

model Operator {
  id           String               @id @default(uuid())
  tapChargers  TapChangerOperator[]
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @default(now())
  roles        String[]
  appInstances AppInstance[]
  company      Company              @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId    String

  @@unique([id, companyId])
}

model TapChanger {
  id        String               @id @default(uuid())
  operators TapChangerOperator[]
  createdAt DateTime             @default(now())
  updatedAt DateTime             @default(now())
  company   Company              @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId String

  @@unique([id, companyId])
}

model TapChangerOperator {
  operator     Operator   @relation(fields: [operatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  operatorId   String
  tapChanger   TapChanger @relation(fields: [tapChangerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tapChangerId String
  assignedAt   DateTime   @default(now())
  company      Company    @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId    String

  @@id([operatorId, tapChangerId, companyId])
}

model Company {
  id                  String               @id @default(uuid())
  name                String               @unique
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @default(now())
  tokenDuration       TokenDuration?
  operators           Operator[]
  tapChangers         TapChanger[]
  tapChangerOperators TapChangerOperator[]
  appInstances        AppInstance[]
}

model TokenDuration {
  id        String   @id @default(uuid())
  duration  Int      @default(24)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId String   @unique

  @@unique([id, companyId])
}

model AppInstance {
  takId      String   @id
  operator   Operator @relation(fields: [operatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  operatorId String
  company    Company  @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  companyId  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  @@unique([takId, operatorId, companyId])
}
